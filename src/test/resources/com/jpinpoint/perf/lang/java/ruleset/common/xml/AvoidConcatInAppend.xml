<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>Avoid contact in append method invocations</description>
        <expected-problems>3</expected-problems>
        <code><![CDATA[
import java.util.Arrays;
import java.util.List;

public class AvoidConcatInAppendTest {

    private static final String STATIC_FINAL_F = "static_final_field";
    private static String static_f = "static_field";
    private final String FINAL_F = "final_field";

    private String bad(String arg) {
        StringBuilder sb = new StringBuilder();
        sb.append("arg='" + arg + "'"); // bad
        return sb.toString();
    }

    private String good(String arg) {
        StringBuilder sb = new StringBuilder();
        sb.append("arg=").append(arg).append("'");
        return sb.toString();
    }
    public void testAddInSecondOrThirdArgAppendGood() {
        StringBuilder wrappedLine = new StringBuilder();
        String str = "bar";
        int offset = 1;
        int wrapLength = 2;
        wrappedLine.append(str, offset + 1, wrapLength + offset + 1); // + but no string concat
        // this still is false positive: wrappedLine.append(1 + 2);
    }
    private String testLiteralsGood(String arg) {
        StringBuilder sb = new StringBuilder();
        sb.append("lit:" + "etc");
        return sb.toString();
    }
    private void testStaticBad() {
        StringBuilder sb = new StringBuilder().append("fld:" + static_f); // bad
        return sb.toString();
    }

    private String testFinalBad() {
        return new StringBuilder().append("fld:" + FINAL_F).toString(); //bad
    }
    private String testStaticFinalGood() {
        return new StringBuilder().append("fld:" + STATIC_FINAL_F).toString();
    }
}
     ]]></code>
    </test-code>
</test-data>
