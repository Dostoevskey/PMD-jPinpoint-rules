<?xml version="1.0" encoding="UTF-8"?>
<test-data
        xmlns="http://pmd.sourceforge.net/rule-tests"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">
    <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>7,10</expected-linenumbers>
        <code><![CDATA[
     import net.jcip.annotations.GuardedBy;
     public class Bad1 {
        @GuardedBy("this")
        private String txt;

        public String getText() {
            return txt; // bad
        }
        public void setText(String t) {
            txt = t; // bad
        }
    }
    ]]></code>
    </test-code>

    <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <code><![CDATA[
    public class Bad2 {
        @GuardedBy("this")
        private String txt;

        public String getText() {
            return txt; // bad
        }
        public synchronized void setText(String t) {
            txt = t;
        }
    }
    ]]></code>
    </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>9</expected-linenumbers>
        <code><![CDATA[
   public class Bad3 {
        @GuardedBy("this")
        private String txt;

        public synchronized String getText() {
            return txt;
        }
        public void setText(String t) {
            txt = t; // bad
        }
    }
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>9</expected-linenumbers>
        <code><![CDATA[
    public class Bad4 {
        @GuardedBy("this")
        private String txt;

        public synchronized String getText() {
            return txt;
        }
        public void setText(String t) {
            txt = t; // bad
        }
    }
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>11</expected-linenumbers>
        <code><![CDATA[
    public class Bad5 {
        @GuardedBy("this")
        private String txt;

        public String getText() {
            synchronized(this) {
                return txt;
            }
        }
        public void setText(String t) {
            txt = t; // bad
        }
    }
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>6</expected-linenumbers>
        <code><![CDATA[
   public class Bad6 {
        @GuardedBy("this")
        private String txt;

        public String getText() {
            return txt; // bad
        }
        public void setText(String t) {
            synchronized(this) {
                txt = t;
            }
        }
    }
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>2</expected-problems>
        <expected-linenumbers>8,13</expected-linenumbers>
        <code><![CDATA[
    public class Bad7 {
        @GuardedBy("this")
        private String txt;
        private Object LOCK;

        public String getText() {
            synchronized(LOCK) {
                return txt; // bad
            }
        }
        public String setText(String t) {
            synchronized(LOCK) {
                txt = t; // bad
            }
        }
    }
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
    public class Good1 {
        @GuardedBy("this")
        private String txt;

        public synchronized String getText() {
            return txt;
        }
        public synchronized void setText(String t) {
            txt = t;
        }
    }
    ]]></code>
   </test-code>

   <test-code>
        <description>NotProperlySynchronizingOnThisWhileUsingGuardedBy</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
    public class Good2 {
        @GuardedBy("this")
        private String txt;

        public String getText() {
            synchronized(this) {
                return txt;
            }
        }
        public void setText(String t) {
            synchronized(this) {
                txt = t;
            }
        }
    }
     ]]></code>
    </test-code>
</test-data>
